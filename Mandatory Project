{"nbformat":4,"nbformat_minor":0,"metadata":{"colab":{"provenance":[],"authorship_tag":"ABX9TyMoiLUJ1Ltdd+BMdHEYVM6g"},"kernelspec":{"name":"python3","display_name":"Python 3"},"language_info":{"name":"python"}},"cells":[{"cell_type":"markdown","source":["**Mandatory Project**"],"metadata":{"id":"oQcug3u1t_O4"}},{"cell_type":"markdown","source":["***1) You are working in a bank and you have been given two lists of the employees who worked in 2021. Employees's name in list 1 are Ramesh, Suresh, Mahesh, Ali, Jacob, Saritha. List 2 contains the names of Ali, Mukesh, Mahesh,Jacob, Sai, Sarita. Please write a program which helps to identify people who are common in both lists. Please do not use any in-built function.***"],"metadata":{"id":"ZrlN7aCKuXwh"}},{"cell_type":"code","source":["employees_2021_list1 = ['Ramesh', 'Suresh', 'Mahesh', 'Ali','Jacob','Saritha']\n","employees_2021_list2 = ['Ali', 'Mukesh', 'Mahesh', 'Jacob', 'Sai', 'Sarita']\n","\n","common_employees = []\n","\n","for employee1 in employees_2021_list1:\n","    for employee2 in employees_2021_list2:\n","        if employee1 == employee2 and employee1 not in common_employees:\n","            common_employees.append(employee1)\n","\n","print(\"Common employees in both lists: \", common_employees)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"_kLYQ8mEYxco","executionInfo":{"status":"ok","timestamp":1676520543038,"user_tz":-330,"elapsed":580,"user":{"displayName":"Smita Parhi","userId":"03404606840784616172"}},"outputId":"24e6bc58-69da-4f4f-9af3-83d87986af5c"},"execution_count":3,"outputs":[{"output_type":"stream","name":"stdout","text":["Common employees in both lists:  ['Mahesh', 'Ali', 'Jacob']\n"]}]},{"cell_type":"markdown","source":["***2) While entering data, someone entered a few names as a common string\"Ramesh Suresh Mohit\". Please write a program which separates all the names and convert them into list. Once converted in a list, please write a program which adds their age.***"],"metadata":{"id":"rNlsacjCvJil"}},{"cell_type":"code","source":["input_string = \"Ramesh Suresh Mohit\"\n","ages = [25, 22, 26]\n","\n","names_list = input_string.split()\n","print(\"List of names: \", names_list)\n","\n","if len(names_list) != len(ages):\n","    print(\"Error: Number of names and ages do not match.\")\n","else:\n","    name_age_dict = dict(zip(names_list, ages))\n","    print(\"Dictionary of names and ages: \", name_age_dict)\n","\n","    total_age = sum(ages)\n","    print(\"Total age of all employees: \", total_age)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"w96sZchkaXm-","executionInfo":{"status":"ok","timestamp":1676521069905,"user_tz":-330,"elapsed":434,"user":{"displayName":"Smita Parhi","userId":"03404606840784616172"}},"outputId":"4e930b7a-15f3-45d4-ff42-5755d3493fd7"},"execution_count":4,"outputs":[{"output_type":"stream","name":"stdout","text":["List of names:  ['Ramesh', 'Suresh', 'Mohit']\n","Dictionary of names and ages:  {'Ramesh': 25, 'Suresh': 22, 'Mohit': 26}\n","Total age of all employees:  73\n"]}]},{"cell_type":"markdown","source":["***3)A few students from a university have taken three exams. Name = Sam, Jacy, Tom, Steve. Python = 25, 26, 29, 28. Statistics = 23, 21,19, 25. SQL = 29, 27, 28, 25. Please write a program which calculates mean values (no in-built function for mean) of all three tests and print the highest mean value. Addition and other functions are allowed. Please also report who scored the highest mark in python using programming construct.***"],"metadata":{"id":"jsnjrdEUtm6O"}},{"cell_type":"code","source":["names = ['Sam', 'Jacy', 'Tom', 'Steve']\n","python_scores = [25, 26, 29, 28]\n","statistics_scores = [23, 21, 19, 25]\n","sql_scores = [29, 27, 28, 25]\n","\n","python_mean = sum(python_scores) / len(python_scores)\n","statistics_mean = sum(statistics_scores) / len(statistics_scores)\n","sql_mean = sum(sql_scores) / len(sql_scores)\n","\n","print(\"Python mean: \", python_mean)\n","print(\"Statistics mean: \", statistics_mean)\n","print(\"SQL mean: \", sql_mean)\n","\n","highest_mean = max(python_mean, statistics_mean, sql_mean)\n","print(\"Highest mean value: \", highest_mean)\n","\n","highest_python_score = max(python_scores)\n","highest_python_score_index = python_scores.index(highest_python_score)\n","highest_python_scorer = names[highest_python_score_index]\n","print(\"Student who scored the highest mark in Python:\",highest_python_scorer)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"Qb57NIT2cYny","executionInfo":{"status":"ok","timestamp":1676526249464,"user_tz":-330,"elapsed":512,"user":{"displayName":"Smita Parhi","userId":"03404606840784616172"}},"outputId":"4ac19825-269e-4c59-aa4a-7259d9a19a62"},"execution_count":18,"outputs":[{"output_type":"stream","name":"stdout","text":["Python mean:  27.0\n","Statistics mean:  22.0\n","SQL mean:  27.25\n","Highest mean value:  27.25\n","Student who scored the highest mark in Python: Tom\n"]}]},{"cell_type":"markdown","source":["***4) You are working in a medical store. A patient came to your medical store and asked to buy 2 strips of paracetamol, 3 strips of azithromycin and 5 strips of Vitamin C. One strip of paracetamol costs Rs 35, one strip of azithromycin costs Rs 49 and one strip of vitamin C costs Rs.33. Patient gave you Rs2000. Please tell us what is the cost of each medicine, total cost of all medicine and how much money you refunded to the patient?***"],"metadata":{"id":"T_9IBQVttbFg"}},{"cell_type":"code","source":["# Quantity of each medicine\n","paracetamol_qty = 2\n","azithromycin_qty = 3\n","vitamin_c_qty = 5\n","\n","# Price of each medicine\n","paracetamol_price = 35\n","azithromycin_price = 49\n","vitamin_c_price = 33\n","\n","# Calculate the cost of each medicine\n","paracetamol_cost = paracetamol_qty * paracetamol_price\n","azithromycin_cost = azithromycin_qty * azithromycin_price\n","vitamin_c_cost = vitamin_c_qty * vitamin_c_price\n","\n","# Calculate the total cost of all medicines\n","total_cost = paracetamol_cost + azithromycin_cost + vitamin_c_cost\n","\n","# Amount given by the patient\n","amount_given = 2000\n","\n","# Calculate the refund amount\n","refund_amount = amount_given - total_cost\n","\n","# Print the results\n","print(f\"Cost of 2 strips of paracetamol is: Rs {paracetamol_cost}\")\n","print(f\"Cost of 3 strips of azithromycin is: Rs {azithromycin_cost}\")\n","print(f\"Cost of 5 strips of vitamin C is: Rs {vitamin_c_cost}\")\n","print(f\"Total cost of all medicines is: Rs {total_cost}\")\n","print(f\"Refund amount is: Rs {refund_amount}\")"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"0rUp_-ZleP7R","executionInfo":{"status":"ok","timestamp":1676521978481,"user_tz":-330,"elapsed":708,"user":{"displayName":"Smita Parhi","userId":"03404606840784616172"}},"outputId":"da9b36c6-3914-41ba-b62f-96a9dbc46f59"},"execution_count":6,"outputs":[{"output_type":"stream","name":"stdout","text":["Cost of 2 strips of paracetamol is: Rs 70\n","Cost of 3 strips of azithromycin is: Rs 147\n","Cost of 5 strips of vitamin C is: Rs 165\n","Total cost of all medicines is: Rs 382\n","Refund amount is: Rs 1618\n"]}]},{"cell_type":"markdown","source":["***5) Accept a sentence as input and find the number of vowels in it. Assume that the sentence has no punctuation marks. For example: I am leaving python contains 6 vowels. This function should be applicable for all other different sentences.***"],"metadata":{"id":"9rDxKqRgtNAx"}},{"cell_type":"code","source":["def count_vowels(sentence):\n","    # Define a list of vowels\n","    vowels = ['a', 'e', 'i', 'o', 'u']\n","\n","    # Convert the sentence to lowercase\n","    sentence = sentence.lower()\n","\n","    # Count the number of vowels in the sentence\n","    vowel_count = 0\n","    for char in sentence:\n","        if char in vowels:\n","            vowel_count += 1\n","\n","    # Return the count of vowels\n","    return vowel_count\n","\n","sentence = \"I am leaving python\"\n","vowel_count = count_vowels(sentence)\n","print(f\"The number of vowels in '{sentence}' is {vowel_count}.\")"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"BplFjL3xf2bN","executionInfo":{"status":"ok","timestamp":1676524573108,"user_tz":-330,"elapsed":710,"user":{"displayName":"Smita Parhi","userId":"03404606840784616172"}},"outputId":"82cbb737-abc6-4bf1-cc6d-0f0a68ee2084"},"execution_count":14,"outputs":[{"output_type":"stream","name":"stdout","text":["The number of vowels in 'I am leaving python' is 6.\n"]}]},{"cell_type":"markdown","source":["***6) You have been appointed by the election commission to create a website. Your first task is to work on a program which tells candidates if they are eligible for voting or not. If they are eligible your output should be \"congrats! you are eligible\", otherwise it should tell that you have to return after X number of years. Eligibility criteria for voting is 18 years. For example, if someone is 18 or above your output should be \"congrats! you are eligible\".If someone\"s age is 15 years it should print output as \"return after 3 years\".***\n"],"metadata":{"id":"7WYOF7pisryE"}},{"cell_type":"code","source":["age = int(input(\"Enter your age: \"))\n","\n","if age >= 18:\n","    print(\"Congrats! You are eligible to vote.\")\n","else:\n","    years_left = 18 - age\n","    print(f\"Sorry, you are not eligible to vote. Please return after {years_left} years.\")"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"I0OCjH0ap_as","executionInfo":{"status":"ok","timestamp":1676525074456,"user_tz":-330,"elapsed":11092,"user":{"displayName":"Smita Parhi","userId":"03404606840784616172"}},"outputId":"b303fd01-b87c-4362-ca1b-8729f6c4e451"},"execution_count":16,"outputs":[{"output_type":"stream","name":"stdout","text":["Enter your age: 15\n","Sorry, you are not eligible to vote. Please return after 3 years.\n"]}]}]}